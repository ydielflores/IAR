################################################################################
#                                                                              #
#      IAR Universal Linker V6.6.2.104                                         #
#                                                                              #
#           Link time     =  09/Nov/2022  00:46:04                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  C:\dev\IAR\IAR\Grupo05CodigoFPQ\Debug\List\Grupo0 #
#                            5CodigoFPQ.map                                    #
#           Output file 1 =  C:\dev\IAR\IAR\Grupo05CodigoFPQ\Debug\Exe\Grupo05 #
#                            CodigoFPQ.d43                                     #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f C:\Users\Ydiel\AppData\Local\Temp\EW9FE6.tmp   #
#                            (C:\dev\IAR\IAR\Grupo05CodigoFPQ\Debug\Obj\asm.r4 #
#                            3                                                 #
#                            -o                                                #
#                            C:\dev\IAR\IAR\Grupo05CodigoFPQ\Debug\Exe\Grupo05 #
#                            CodigoFPQ.d43                                     #
#                            -l                                                #
#                            C:\dev\IAR\IAR\Grupo05CodigoFPQ\Debug\List\Grupo0 #
#                            5CodigoFPQ.map                                    #
#                            -xms                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.5\430\LIB\\"                            #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.5\430\config\linker\lnk430fr6989.xcl"     #
#                            (-cmsp430 -QCODE_I=CODE_ID -QTLS16_I=TLS16_ID     #
#                            -D__iar_HWMUL=4C0 -Z(CONST)INFO=1800-19FF         #
#                            -Z(CONST)INFOA=1980-19FF                          #
#                            -Z(CONST)INFOB=1900-197F                          #
#                            -Z(CONST)INFOC=1880-18FF                          #
#                            -Z(CONST)INFOD=1800-187F                          #
#                            -Z(DATA)TINYRAM=0006-001F                         #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,TLS16_I=1C00-2 #
#                            3FF                                               #
#                            -Z(DATA)CODE_I                                    #
#                            -Z(DATA)DATA20_I,DATA20_Z,DATA20_N                #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CONST)DATA16_P,DATA20_P=4400-FF7F              #
#                            -Z(DATA)DATA16_HEAP+_DATA16_HEAP_SIZE             #
#                            -Z(DATA)DATA20_HEAP+_DATA20_HEAP_SIZE             #
#                            -Z(CONST)MPU_B1 -Z(CONST)IPE_B1=4400-FF7F         #
#                            -Z(DATA)IPEDATA16_N -Z(CODE)IPECODE16             #
#                            -Z(CONST)IPEDATA16_C,IPE_B2 -Z(CONST)MPU_B2       #
#                            -Z(CONST)DATA16_C,DATA16_ID,TLS16_ID,DIFUNCT,CHEC #
#                            KSUM=4400-FF7F                                    #
#                            -Z(CODE)CSTART,ISR_CODE,CODE16=4400-FF7F          #
#                            -P(CODE)CODE=4400-FF7F,10000-23FF7                #
#                            -Z(CODE)CODE_PAD                                  #
#                            -Z(CONST)DATA20_C,DATA20_ID,CODE_ID=4400-FF7F,100 #
#                            40-23FF7                                          #
#                            -Z(CONST)SIGNATURE=FF80-FF8F                      #
#                            -Z(CONST)JTAGSIGNATURE=FF80-FF83                  #
#                            -Z(CONST)BSLSIGNATURE=FF84-FF87                   #
#                            -Z(CONST)IPESIGNATURE=FF88-FF8F                   #
#                            -Z(CODE)INTVEC=FF90-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -f                       #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.5\430\config\linker\multiplier32.xcl"     #
#                            (-e?Mul8Hw=?Mul8 -e?Mul16Hw=?Mul16                #
#                            -e?Mul16to32uHw=?Mul16to32u                       #
#                            -e?Mul16to32sHw=?Mul16to32s -e?Mul32Hw32=?Mul32   #
#                            -e?Mul64Hw32=_Mul64i                              #
#                            -e?Mul32u32uto64iHw32=_Mul32u32uto64i             #
#                            -e?Mul32fHw32=_Mul32f                             #
#                            -e_Mul64fHw32Ptr=_Mul64fPtr) -D_STACK_SIZE=A0     #
#                            -rt -D_DATA16_HEAP_SIZE=A0                        #
#                            -D_DATA20_HEAP_SIZE=50)                           #
#                                                                              #
#                           Copyright (C) 1987-2019 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.


                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       00A0 
           _STACK_SIZE             00A0 
           __iar_HWMUL             04C0 
    *************************************************************************

  FILE NAME : C:\dev\IAR\IAR\Grupo05CodigoFPQ\Debug\Obj\asm.r43
  PROGRAM MODULE, NAME : main

Absolute parts
     FFFE - FFFF
           LOCAL                   ADDRESS         
           =====                   =======         
           __MSP430FR5922__        0000 
  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 2360, align: 1
  Segment part 0. ROOT 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: 4400 - 5011 (0xc12 bytes), align: 1
  Segment part 1. ROOT        Intra module refs:   Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    4404 
           LOCAL                   ADDRESS         
           =====                   =======         
           init                    4400 
           UnlockGPIO              441C 
           Initialize              4400 
           LCD                     4420 
           SetupButtons            443A 
           ShowTitle               4478 
           ReadS1                  44A0 
           Delay                   4FFA 
           clearFlags              5008 
           showNamesLoop           44BC 
           menuSection1            45CC 
           resetChoiceList         446C 
           ReadS2                  44AE 
           showCurrentName         44CC 
           iterateNameList         45B6 
           break                   45CA 
           ShowName1               44DA 
           ShowName2               4510 
           ShowName3               454C 
           ShowName4               457C 
           getUserInput            4F6C 
           nextName                45BE 
           initMenu1               45DA 
           menu1Loop               460E 
           saveSelection1          4658 
           menuSection2            465C 
           showQ1                  45EE 
           showCurrentSel1         461E 
           iterateQ1               4644 
           sel1Option1             4624 
           sel1Option2             4634 
           nextSel1                464C 
           initMenu2               466A 
           menu2Loop               46AA 
           saveSelection2          4700 
           menuSection3            4704 
           showQ2                  467E 
           showCurrentSel2         46BA 
           iterateQ2               46EC 
           sel2Option1             46C0 
           sel2Option2             46D6 
           nextSel2                46F4 
           initMenu3               4712 
           menu3Loop               4752 
           saveSelection3          4828 
           menuSection4            4832 
           showQ3                  4726 
           showCurrentSel3         4762 
           iterateQ3               4802 
           decimalDigitSelection   4768 
           binaryDigitSelection    476E 
           showNum1                4798 
           showNum2                47A4 
           showNum0                478C 
           showNum3                47B0 
           showNum4                47BC 
           showNum5                47C8 
           showNum6                47D4 
           showNum7                47E0 
           showNum8                47EC 
           showNum9                47F6 
           nextSel3                480A 
           nextSelDec              4812 
           nextSelBin              481C 
           initMenu4               4842 
           setPoint                487C 
           generateNum             48C0 
           conversionSection       4B54 
           menuSection1Ladder1     4840 
           initNumDisplay          485C 
           decimalPoint            4882 
           binaryPoint             4888 
           atSpace2                48A8 
           atSpace3                48AE 
           atSpace1                48A2 
           atSpace4                48B4 
           atSpace5                48BA 
           startPositionCounter    490E 
           checkLoop1              4920 
           saveSelection           4A8C 
           resetChoice             4916 
           numLoop2                4988 
           numLoop3                499C 
           numLoop4                49B0 
           numLoop5                49C4 
           numLoop6                49D8 
           numLoop1                4974 
           signLoop                492A 
           showSign                4948 
           nextSign                4938 
           resetSign               4944 
           showPlus                494E 
           showNeg                 4964 
           getDigitDisplay         4F7C 
           breakLoopHere           49EC 
           iteratorCall            49EE 
           updateCounter           49F2 
           limitDecimal            49FE 
           limitBinary             4A06 
           resetDigit              4A0C 
           multiplyNum             4A10 
           setGreaterMult          4A1A 
           multLoop                4A24 
           getExponent             4A2E 
           getDecimalExponent      4A34 
           getBinaryExponent       4A62 
           wholeFractionalDec      4A48 
           getFractionalExponentDec
                                   4A56 
           getWholeExponentDec     4A4C 
           wholeFractionalBin      4A72 
           getFractionalExponentBin
                                   4A80 
           getWholeExponentBin     4A76 
           saveDecimalSelection    4A92 
           saveBinarySelection     4ABA 
           getTenMultiplier        4B28 
           convertNum              4AA8 
           multiplyNums            4B44 
           saveAsFractional        4AB6 
           saveAsWhole             4AB2 
           breakLoop               4EB2 
           getFractionFactor       4ACA 
           getWholeFactor          4ADA 
           fractionFactor          4AE6 
           getTwoMultiplier        4B34 
           firstFactor             4B04 
           secondFactor            4B0A 
           thirdFactor             4B10 
           fourthFactor            4B16 
           fifthFactor             4B1C 
           sixthFactor             4B22 
           multiplyTen             4EB4 
           multiplyTwo             4B40 
           multiLoop               4B4A 
           initConversion          4B7A 
           choseDecimal            4B5E 
           choseBinary             4B64 
           decToBinConversion      4B9A 
           returningBack           4B6A 
           binToDecConversion      4B7E 
           readAny                 4FE6 
           setDecSign              4BB2 
           ifNegativeDecNumber     4C0A 
           clearOtherNums          4EF8 
           displayWholeDec         4D5A 
           displayFractionPoint    4E76 
           displayFractionDec      4E02 
           setBinSign              4BE4 
           ifNegativeNumber        4C22 
           displayWholeBin         4D0A 
           displayFractionBin      4DB6 
           clearSign               4BDE 
           setNegSign              4BC0 
           setPosSign              4BCC 
           set0Sign                4BFE 
           set1Sign                4BF2 
           displayNumber           4F22 
           negateNumberDec         4C6E 
           negateNumber            4C2C 
           negateWholePart         4C36 
           negateFractionalPart    4C56 
           findWholeSubstractor    4C42 
           negateWhole             4C4E 
           findFractionalSubstractor
                                   4C5C 
           negateFrac              4C66 
           negateWholePartDec      4C78 
           negateFractionalPartDec
                                   4CA8 
           findWholeSubstractorDec
                                   4C86 
           negateWholeDec          4C92 
           oneDigit                4CA0 
           twoDigit                4CA4 
           findFractionalSubstractorDec
                                   4CAE 
           negateFracDec           4CB8 
           getDigitCount           4CC0 
           decimalDigits           4CCC 
           binaryDigits            4CD6 
           countDecLoop            4CDA 
           countBinLoop            4CE4 
           finalizeCount           4CEE 
           addOneMore              4D04 
           continueDisplay         4D16 
           finalBin                4D34 
           dividingLoop            4D20 
           divideNum               4ECA 
           getDigitLength          4D6A 
           continueDecDisplay      4D6E 
           finalDec                4D8E 
           dividingTenLoop         4D78 
           displayZeroBin          4DC0 
           gettingLimit            4DC8 
           passLimit               4DD2 
           addLoop                 4DD6 
           finishLoop              4E00 
           passOne                 4DE6 
           passZero                4DEA 
           enterFractionBin        4DEE 
           fractionSub             4DFC 
           displayZeroDec          4E18 
           getFractionLength       4E3C 
           dividingTenLoops        4E22 
           fractionLength0         4E5A 
           fractionLength1         4E5E 
           fractionLength2         4E62 
           fractionLength3         4E66 
           fractionLength4         4E6C 
           fractionLength5         4E70 
           fracPoint0              4E94 
           fracPoint1              4E9A 
           fracPoint2              4EA0 
           fracPoint3              4EA6 
           fracPoint4              4EAC 
           divideLoop              4ED6 
           remainder0              4EE2 
           remainder1              4EEA 
           enterPosition           4F2A 
           atSegment0              4F48 
           atSegment1              4F4E 
           atSegment2              4F54 
           atSegment3              4F5A 
           atSegment4              4F60 
           atSegment5              4F66 
           storeZero               4FAC 
           storeOne                4FB2 
           storeTwo                4FB8 
           storeThree              4FBE 
           storeFour               4FC4 
           storeFive               4FCA 
           storeSix                4FD0 
           storeSeven              4FD6 
           storeEight              4FDC 
           storeNine               4FE0 
           breakRead               4FF8 
           Next                    4FFE 
           EndProgram              500E 




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
CSTACK                                 2360 - 23FF              A0   rel    1
<CODE> 1                               4400 - 5011             C12   rel    1
                                       FFFE - FFFF               2  aseg  

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 3 090 bytes of CODE memory (+ 2 absolute )
   160 bytes of DATA memory

Errors: none
Warnings: none

